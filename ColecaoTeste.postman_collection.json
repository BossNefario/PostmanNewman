{
	"info": {
		"_postman_id": "382faba8-e883-4ea7-832e-2b068bb1e86a",
		"name": "ColecaoTeste",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26167121"
	},
	"item": [
		{
			"name": "{{url}}/posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    var expectedBody = [\r",
							"        {\r",
							"            \"userId\": 1,\r",
							"            \"id\": 100,\r",
							"            \"body\": \"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\"\r",
							"        }\r",
							"    ];\r",
							"    pm.response.to.have.jsonBody(expectedBody);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/posts",
					"host": [
						"{{url}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{url}}/posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"New post has correct ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.equal(101); // Substitua pelo ID esperado\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    var expectedBody = [\r",
							"        {\r",
							"            \"userId\": 1,\r",
							"            \"id\": 101,\r",
							"            \"title\": \"Novo Post\",\r",
							"            \"body\": \"Conteúdo do novo post\"\r",
							"        }\r",
							"    ];\r",
							"    pm.response.to.have.jsonBody(expectedBody);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 1,\r\n    \"id\": 101,\r\n    \"title\": \"Novo Post\",\r\n    \"body\": \"Conteúdo do novo post\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/posts",
					"host": [
						"{{url}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{url}}/posts/101",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Deleted post body is not present in response data\", function () {\r",
							"    var deletedPostBody = \"Conteúdo do novo post\"; // O corpo do post que você excluiu\r",
							"    var responseText = pm.response.text();\r",
							"    \r",
							"    // Verifica se o corpo do post excluído não está presente nos dados da resposta\r",
							"    pm.expect(responseText.includes(deletedPostBody)).to.be.false;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/posts/101",
					"host": [
						"{{url}}"
					],
					"path": [
						"posts",
						"101"
					]
				}
			},
			"response": []
		}
	]
}